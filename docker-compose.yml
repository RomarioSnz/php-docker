
services:
  site:
    build: ./site1  # Директория для сборки образа
    container_name: site1
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - net

  site2:
    build: ./site2  # Директория для сборки образа второго сайта
    container_name: site2
    volumes:
      - ./site2:/var/www/html  # Абсолютный путь внутри контейнера для монтирования файлов
    ports:
      - "8082:80"
    networks:
      - net

  db:
    build: ./database  # Директория для сборки образа базы данных PostgreSQL
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres  # Имя базы данных
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - net

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Подключение конфигурации Nginx
    ports:
      - "80:80"  # Проброс порта для работы Nginx
    depends_on:
      - site  # Имя сервиса
      - site2  # Имя сервиса
    networks:
      - net

  pgadmin4:
    image: elestio/pgadmin:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@qwe.ru
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "8080:8080"
    networks:
      - net
    volumes:
      - ./servers.json:/pgadmin4/servers.json

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - net

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@db:5432/postgres?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - net
    depends_on:
      - db 

  nginx-exporter:
    image: bitnami/nginx-exporter:latest
    container_name: nginx-exporter
    ports:
      - "9113:9113"
    command: -nginx.scrape-uri http://nginx-proxy/stub_status
    networks:
      - net
    depends_on:
      - nginx

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - net

networks:
  net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  db_data:
  grafana_data: 